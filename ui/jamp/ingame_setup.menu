// setup menu

//NOTE: overrides mouseEnter{} mouseExit{}
#define DOHIGHLIGHT( _r ) \
	mouseEnter { \
		transition2 highlight _r 1 1.375 \
	} \
	mouseExit { \
		setitemrect highlight _r \
	}

#define COMMON( _n, _g, _t, _r ) \
	name _n \
	group _g \
	type _t \
	rect _r \
	DOHIGHLIGHT( _r )

#define TEXT_DEFAULTS \
	font 7 \
	textscale .375 \
	forecolor .615 .615 .956 1 \
	backcolor 1 1 1 1 \
	textstyle ITEM_TEXTSTYLE_SHADOWED

#define BORDER_NO \
	border 0
#define BORDER_1PX \
	border		1 \
	bordersize	0.5 \
	bordercolor	0 0 .6 1
#define BORDER_DEFAULT \
	BORDER_NO

#define MISC_DEFAULTS \
	BORDER_DEFAULT \
	visible 0

#define BUTTON_DEFAULTS \
	action { play "sound/interface/button1" }

#define TEXT_APPLY \
	font 7 \
	textscale .5 \
	forecolor 1 0 0 1

// item types
#define BACKGROUND_COMMON( _n, _r ) \
	name		_n \
	rect		_r \
	style		WINDOW_STYLE_FILLED \
	forecolor	1 1 1 1 \
	visible		1 \
	backcolor	0 0 .6 .333333 \
	decoration

#define BACKGROUND_TITLE( _n, _r ) \
	itemDef { \
		BACKGROUND_COMMON( _n, _r ) \
		backcolor	0 .5 1 .25 \
	}
#define BACKGROUND_B( _n, _r ) \
	itemDef { \
		BACKGROUND_COMMON( _n, _r ) \
		BORDER_1PX \
	}

#define TITLE_SMALL( _n, _g, _r, _text ) \
	itemDef { \
		TEXT_DEFAULTS \
		name		_n \
		group		_g \
		rect		_r \
		text		_text \
		textscale	0.3333 \
		textalign	ITEM_ALIGN_CENTER \
		forecolor	0.5 0.75 1.0 1.0 \
		visible		1 \
		decoration \
	}

#define HIGHLIGHT( _name, _group, _bg ) \
	itemDef { \
		name		_name \
		group		_group \
		background	_bg \
		forecolor	1 1 1 1 \
		rect		0 0 0 0 \
		style		WINDOW_STYLE_SHADER \
		visible		1 \
		decoration \
	}

#define HIDETABS \
	hide tabWindow1 \
	hide tabWindow2 \
	hide tabWindow3 \
	hide tabWindow4 \
	hide tabWindow5 \
	hide tabWindow6

#define TABDEF( _rect, _name, _group, _window, _text, _alignx, _desc ) \
	itemDef { \
		COMMON( _name, _group, ITEM_TYPE_BUTTON, _rect ) \
		TEXT_DEFAULTS BORDER_DEFAULT \
		text		_text \
		textalignx	_alignx \
		descText	_desc \
		action { \
			play "sound/interface/button1" \
			defer VideoSetup videowarningMenu \
			HIDETABS \
			show _window \
			hide applySoundChanges \
			setitemcolor setup_submenu forecolor .682 .682 1 1 \
			setitemcolor _name forecolor 1 0.2 0 1 \
		} \
		style		WINDOW_STYLE_EMPTY \
		textalign	ITEM_ALIGN_CENTER \
		textalignx	38 \
		textscale	0.46875 \
		forecolor	.682 .682 1 1 \
		visible		1 \
	}

// option types
#define YESNO( _cvar, _text, _desc, _alignx ) \
	TEXT_DEFAULTS MISC_DEFAULTS BUTTON_DEFAULTS \
	cvar		_cvar \
	descText	_desc \
	text		_text \
	textalignx	_alignx

#define MULTI_STR( _cv, _strs, _desc, _text, _alignx ) \
	TEXT_DEFAULTS MISC_DEFAULTS BUTTON_DEFAULTS \
	cvar		_cv \
	cvarStrList	_strs \
	descText	_desc \
	text		_text \
	textalignx	_alignx

#define MULTI_FL( _cv, _strs, _desc, _text, _alignx ) \
	TEXT_DEFAULTS MISC_DEFAULTS BUTTON_DEFAULTS \
	cvar			_cv \
	cvarFloatList	_strs \
	descText		_desc \
	text			_text \
	textalignx		_alignx

#define EDITFIELD( _cv, _desc, _maxChars, _maxPaintChars, _text, _alignx ) \
	TEXT_DEFAULTS MISC_DEFAULTS BUTTON_DEFAULTS \
	cvar			_cv \
	descText		_desc \
	maxchars		_maxChars \
	maxpaintchars	_maxPaintChars \
	text			_text \
	textalignx		_alignx

#define SLIDER( _cv, _desc, _text, _alignx, _sliderVals ) \
	TEXT_DEFAULTS MISC_DEFAULTS BUTTON_DEFAULTS \
	cvarfloat	_cv \
	descText	_desc \
	text		_text \
	textalignx	_alignx \
	slider		_sliderVals

#define NUMERIC( _cv, _desc, _maxChars, _maxPaintChars, _text, _alignx ) \
	TEXT_DEFAULTS MISC_DEFAULTS BUTTON_DEFAULTS \
	cvar			_cv \
	descText		_desc \
	maxchars		_maxChars \
	maxpaintchars	_maxPaintChars \
	text			_text \
	textalignx		_alignx

#define OWNERDRAW( _od, _desc, _text, _alignx ) \
	TEXT_DEFAULTS MISC_DEFAULTS BUTTON_DEFAULTS \
	ownerdraw	_od \
	descText	_text \
	text		_desc \
	textalignx	_alignx

#define BUTTON( _desc, _text, _alignx ) \
	TEXT_APPLY MISC_DEFAULTS \
	descText	_desc \
	text		_text \
	textalignx	_alignx \
	style		WINDOW_STYLE_EMPTY

// "gfx/2d/droid_view"
// "gfx/menus/main_background"
// "gfx/menus/main_centerblue"
// "gfx/menus/menu_blendbox_extended"
// "gfx/menus/menu_blendbox"
// "gfx/menus/menu_blendbox3"
// "gfx/menus/menu_box_ingame"
// "gfx/menus/menu_buttonback"
// "powerups/rezout"

{
	menuDef {
		name			"ingame_setup"
		visible			0
		fullscreen		0
		rect			0 32 640 480 //448
		focusColor		1 1 1 1				// Focus color for text and items
		style			1
		border			0
		descX			355
		descY			460
		descScale		1
		descColor		1 .5 .2 1			// color for description text
		descAlignment	ITEM_ALIGN_CENTER
		outOfBoundsClick	// this closes the window if it gets a click out of the rectangle
		onOpen {
			show			tabWindowYesNo

			HIDETABS

			setitemcolor	setup_submenu forecolor .682 .682 1 1
			setitemcolor	tabButtonYesNo forecolor 1 0.2 0 1
		}
		onESC {
			play				"sound/interface/button1"
			close				ingame_setup
		}
		onClose {
			setitemrect			highlight 0 0 0 0
		}

		/* layout: ~23 items per tab, 16px rows, 14px titles, 1px inner border, 1px padding
		total pos	0 32 640 448
		tabs col	80px
		tabs row	24px
		pane col	560 (280+280, 1px inner border, 1px padding)
		pane row	16px, 14px titles
			/-----------------------------\
			|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|
			|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|
			|-----------------------------|
			|	| /---------\ /---------\ |
			| T	| |			| |			| |
			|	| |	P A N E	| |	P A N E	| |
			| A	| |			| |			| |
			|	| |			| |			| |
			| B	| |			| |			| |
			|	| |			| |			| |
			| S	| |			| |			| |
			|	| |			| |			| |
			|	| |			| |			| |
			|	| |			| |			| |
			|	| \---------/ \---------/ |
			\-----------------------------/
		*/

		// overall background
		BACKGROUND_B( background, 0 0 639 447 )

		// reusable selection "highlight"
		HIGHLIGHT( highlight, highlights, "powerups/rezout" )

		// side tabs
		BACKGROUND_B( tabBackground,	2 2 79 146 )
		//NOTE: you must update HIDETABS when adding/removing/renaming tabs
		//		rect			name		group			window,		text			alignx	desc
		TABDEF( 4 4 76 24,		tabButton1,	setup_submenu,	tabWindow1,	"GAME",			0,		"Page 1: Misc" )
		TABDEF( 4 28 76 24,		tabButton2,	setup_submenu,	tabWindow2,	"GAME / HUD",	0,		"Page 2: Misc / HUD" )
		TABDEF( 4 52 76 24,		tabButton3,	setup_submenu,	tabWindow3,	"HUD / CAM",	0,		"Page 3: HUD / Camera" )
		TABDEF( 4 76 76 24,		tabButton4,	setup_submenu,	tabWindow4,	"CAM / ADV",	0,		"Page 4: Camera / Advanced" )
		TABDEF( 4 100 76 24,	tabButton5,	setup_submenu,	tabWindow5,	"GFX / IN",		0,		"Page 5: Graphics / Input" )
		TABDEF( 4 124 76 24,	tabButton6,	setup_submenu,	tabWindow6,	"SND / MP",			0,		"Page 6: Sound" )

		// layout: options panes
		BACKGROUND_B( optsLeft,			82 2 277 425 )
		BACKGROUND_B( optsRight,		360 2 277 425 )

		// players
		BACKGROUND_B( tabWindow1, 84 4 273 257 )
		BACKGROUND_TITLE( tabWindow1, 131 6 180 14 )
		TITLE_SMALL( text_w1_players, tabWindow1, 218 6 135 14, "Players" )
		itemDef {
			COMMON( broadsword, tabWindow1, ITEM_TYPE_MULTI, 86 20 270 16 )
			MULTI_STR( "broadsword", { "Off (default)"; "0"; "On"; "1"; "Excessive"; "2" }, "Ragdoll physics", "Ragdoll:", 82 )
		}
		itemDef {
			COMMON( cg_altDimA, tabWindow1, ITEM_TYPE_SLIDER, 86 36 270 16 )
			SLIDER( "cg_altDimA" 96 0 255, "Transparency for players in the 'alternate dimension'", "Alt-Dim Transparency:", 19, 141 16 8 16 )
		}
		itemDef { // 0 255 0 100
			COMMON( cg_bubbleColour, tabWindow1, ITEM_TYPE_EDITFIELD, 86 52 270 16 )
			EDITFIELD( "cg_bubbleColour", "Protection bubble colour", 19, 19, "Protection Bubble Colour:", 0 )
		}
		itemDef {
			COMMON( cg_dismember, tabWindow1, ITEM_TYPE_MULTI, 86 68 270 16 )
			MULTI_STR( "cg_dismember", { "Off (default)"; "0"; "On (limbs)"; "1"; "On (everything)"; "2" }, "Limb dismemberment (gore)", "Dismemberment:", 54 )
		}
		itemDef { // 1
			COMMON( cg_drawEnemyInfo, tabWindow1, ITEM_TYPE_YESNO, 86 84 270 16 )
			YESNO( "cg_drawEnemyInfo", "Show NME Info:", "Show leader in the top-right corner", 54 )
		}
		itemDef { // 1
			COMMON( cg_drawFriend, tabWindow1, ITEM_TYPE_YESNO, 86 100 270 16 )
			YESNO( "cg_drawFriend", "Show Friend Icons:", "Show icon above teammates", 34 )
		}
		itemDef { // 0
			COMMON( cg_jumpSounds, tabWindow1, ITEM_TYPE_YESNO, 86 116 270 16 )
			YESNO( "cg_jumpSounds", "Jump Sounds:", "Put some grunt in your jump", 64 )
		}
		itemDef {
			COMMON( cg_noBodies, tabWindow1, ITEM_TYPE_MULTI, 86 132 270 16 )
			MULTI_STR( "cg_noBodies", { "No"; "0"; "Instant fade"; "1"; "Instant fade, silent"; "2" }, "Show or hide bodies", "Hide Bodies:", 64 )
		}
		itemDef { // 0
			COMMON( cg_noPlayerAnims, tabWindow1, ITEM_TYPE_YESNO, 86 148 270 16 )
			YESNO( "cg_noPlayerAnims", "Animate Players:", "Disable player animations", 44 )
		}
		itemDef { // 0
			COMMON( cg_noTaunt, tabWindow1, ITEM_TYPE_YESNO, 86 164 270 16 )
			YESNO( "cg_noTaunt", "No Taunts:", "Disable taunt sounds", 74 )
		}
		itemDef { // 1
			COMMON( cg_showDuelSabers, tabWindow1, ITEM_TYPE_YESNO, 86 180 270 16 )
			YESNO( "cg_showDuelSabers", "Show Duel Sabers:", "Show sabers of duelists", 40 )
		}
		itemDef { // 1
			COMMON( cg_smartEntities, tabWindow1, ITEM_TYPE_YESNO, 86 196 270 16 )
			YESNO( "cg_smartEntities", "Smart Entities:", "Skip rendering of players and objects behind solids", 50 )
		}
		itemDef { // 1
			COMMON( cg_smoothClients, tabWindow1, ITEM_TYPE_MULTI, 86 212 270 16 )
			MULTI_STR( "cg_smoothClients", { "Off"; "0"; "On (default)"; "1"; "On + PMove"; "2" }, "Player smoothing technique", "Smooth Clients:", 50 )
		}
		itemDef {
			COMMON( cg_teamSabersRGB, tabWindow1, ITEM_TYPE_MULTI, 86 228 270 16 )
			MULTI_STR( "cg_teamSabersRGB", { "Disallowed"; "0"; "Team Only"; "1"; "Allowed"; "2" }, "Allow team-mates (or everyone) to use RGB sabers in team gametypes", "TFFA RGB Sabers:", 45 )
		}
		itemDef {
			COMMON( cg_footsteps, tabWindow1, ITEM_TYPE_MULTI, 86 244 270 16 )
			MULTI_STR( "cg_footsteps", { "Off"; "0"; "SND"; "1"; "SND,EFX"; "2"; "SND,EFX,GFX"; "3"; "SND,EFX,GFX (always)"; "4" }, "Footstep effects", "Footsteps:", 74 )
		}

		// sabers
		BACKGROUND_B( tabWindow1, 84 262 273 96 )
		BACKGROUND_TITLE( tabWindow1, 131 264 180 14 )
		TITLE_SMALL( text_w1_sabers, tabWindow1, 218 264 135 14, "Sabers" )
		itemDef {
			COMMON( cg_saberBladeCoreMulti, tabWindow1, ITEM_TYPE_SLIDER, 86 278 270 16 )
			SLIDER( "cg_saberBladeCoreMulti" 1.0 0.1 3.0, "Saber core width", "Saber Core Width:", 8, 172 16 8 16 )
		}
		itemDef {
			COMMON( cg_saberBladeGlowMulti, tabWindow1, ITEM_TYPE_SLIDER, 86 294 270 16 )
			SLIDER( "cg_saberBladeGlowMulti" 1.25 0.1 3.0, "Saber glow width", "Saber Glow Width:", 8, 172 16 8 16 )
		}
		itemDef {
			COMMON( cg_saberTrail, tabWindow1, ITEM_TYPE_MULTI, 86 310 270 16 )
			MULTI_STR( "cg_saberTrail", { "None"; "0"; "Normal"; "1"; "Mirror"; "2"; "???"; "3" }, "Saber trail type", "Saber Trails:", 28 )
		}
		itemDef {
			COMMON( cg_saberTrailLength, tabWindow1, ITEM_TYPE_SLIDER, 86 326 270 16 )
			SLIDER( "cg_saberTrailLength" 0.7 0.1 3.0, "Saber trail length", "Saber Trail Length:", 0, 170 16 8 16 )
		}
		itemDef {
			COMMON( cg_saberWidth, tabWindow1, ITEM_TYPE_SLIDER, 86 342 270 16 )
			SLIDER( "cg_saberWidth" 0.8 0.1 3.0, "Saber width", "Saber Width:", 34, 170 16 8 16 )
		}

		// duel shaders
		BACKGROUND_B( tabWindow1, 84 359 273 65 )
		BACKGROUND_TITLE( tabWindow1, 131 361 180 14 )
		TITLE_SMALL( text_w1_duelshaders, tabWindow1, 218 361 135 14, "Duel Shaders" )
		itemDef { // 72 72 224 128 0
			COMMON( cg_duelColour, tabWindow1, ITEM_TYPE_EDITFIELD, 86 375 270 16 )
			EDITFIELD( "cg_duelColour", "Colour of duelists", 19, 19, "Duel Colour:", 24 )
		}
		itemDef {
			COMMON( cg_duelShaderStyle, tabWindow1, ITEM_TYPE_MULTI, 86 391 270 16 )
			MULTI_STR( "cg_duelShaderStyle", { "Bubble (default)"; "-1"; "Protect"; "1"; "Seeing 1"; "2"; "Jedi Master"; "3"; "Seeing 2"; "4"; "Flat Bubble"; "5"; "Cloak"; "6"; "Bubble (default)"; "7" }, "Visual effect for duelists", "Duel Shader:", 24 )
		}
		itemDef { // 0
			COMMON( cg_duelShaderTest, tabWindow1, ITEM_TYPE_YESNO, 86 407 270 16 )
			YESNO( "cg_duelShaderTest", "Duel Shader Test:", "Pretend everyone is in a duel", 0 )
		}

		// force models
		BACKGROUND_B( tabWindow1, 362 4 273 128 )
		BACKGROUND_TITLE( tabWindow1, 409 6 180 14 )
		TITLE_SMALL( text_w1_forcemodels, tabWindow1, 495 6 135 14, "Force Models" )
		itemDef { // ""
			COMMON( cg_forceEnemySaber, tabWindow1, ITEM_TYPE_EDITFIELD, 364 20 270 16 )
			EDITFIELD( "cg_forceEnemySaber", "Force enemies to use a certain hilt", 19, 19, "Force NME Saber:", 5 )
		}
		itemDef { // ""
			COMMON( cg_forceOwnSaber, tabWindow1, ITEM_TYPE_EDITFIELD, 364 36 270 16 )
			EDITFIELD( "cg_forceOwnSaber", "Visually override your selected hilt", 19, 19, "Force Own Saber:", 5 )
		}
		itemDef { // 0
			COMMON( cg_forceModel, tabWindow1, ITEM_TYPE_YESNO, 364 52 270 16 )
			YESNO( "cg_forceModel", "Force Models:", "Force everyone to use the same model", 20 )
		}
		itemDef { // 64 192 255
			COMMON( cg_forceAllyColour, tabWindow1, ITEM_TYPE_EDITFIELD, 364 68 270 16 )
			EDITFIELD( "cg_forceAllyColour", "RGB tint for allies", 19, 19, "Force Ally RGB:", 10 )
			cvarTest	"cg_forceModel"
			hideCvar	{ "0" }
		}
		itemDef { // rebel/default
			COMMON( cg_forceAllyModel, tabWindow1, ITEM_TYPE_EDITFIELD, 364 84 270 16 )
			EDITFIELD( "cg_forceAllyModel", "Force allies to use the same model", 19, 19, "Force Ally Model:", 0 )
			cvarTest	"cg_forceModel"
			hideCvar	{ "0" }
		}
		itemDef { // 0 255 0
			COMMON( cg_forceEnemyColour, tabWindow1, ITEM_TYPE_EDITFIELD, 364 100 270 16 )
			EDITFIELD( "cg_forceEnemyColour", "RGB tint for enemies", 19, 19, "Force NME RGB:", 15 )
			cvarTest	"cg_forceModel"
			hideCvar	{ "0" }
		}
		itemDef { // stormtrooper/default
			COMMON( cg_forceEnemyModel, tabWindow1, ITEM_TYPE_EDITFIELD, 364 116 270 16 )
			EDITFIELD( "cg_forceEnemyModel", "Force enemies to use the same model", 19, 19, "Force NME Model:", 6 )
			cvarTest	"cg_forceModel"
			hideCvar	{ "0" }
		}

		// shield effects
		BACKGROUND_B( tabWindow1, 362 133 273 81 )
		BACKGROUND_TITLE( tabWindow1, 409 135 180 14 )
		TITLE_SMALL( text_w1_shieldeffects, tabWindow1, 495 135 135 14, "Shield Effects" )
		itemDef { // 72 128 224 255 0
			COMMON( cg_shieldColour, tabWindow1, ITEM_TYPE_EDITFIELD, 364 149 270 16 )
			EDITFIELD( "cg_shieldColour", "RGB colour of shield effects", 19, 19, "Shield RGB:", 14 )
		}
		itemDef { // 1
			COMMON( cg_shieldLayers, tabWindow1, ITEM_TYPE_NUMERICFIELD, 364 165 270 16 )
			NUMERIC( "cg_shieldLayers", "Intensity of the shield effect", 5, 5, "Shield Layers:", 0 )
		}
		itemDef {
			COMMON( cg_shieldStyle, tabWindow1, ITEM_TYPE_MULTI, 364 181 270 16 )
			MULTI_STR( "cg_shieldStyle", { "Bubble (default)"; "-1"; "Protect"; "1"; "Seeing 1"; "2"; "Jedi Master"; "3"; "Seeing 2"; "4"; "Flat Bubble"; "5"; "Cloak"; "6"; "Bubble (default)"; "7" }, "Visual effect for shields", "Shield Style:", 5 )
		}
		itemDef { // 0
			COMMON( cg_shieldTest, tabWindow1, ITEM_TYPE_YESNO, 364 197 270 16 )
			YESNO( "cg_shieldTest", "Shield Test:", "Pretend everyone is losing shield", 10 )
		}

		// world
		BACKGROUND_B( tabWindow1, 362 215 273 160 )
		BACKGROUND_TITLE( tabWindow1, 409 217 180 14 )
		TITLE_SMALL( text_w1_world, tabWindow1, 495 217 135 14, "World" )
		itemDef { // 1
			COMMON( cg_drawScreenTints, tabWindow1, ITEM_TYPE_YESNO, 364 231 270 16 )
			YESNO( "cg_drawScreenTints", "Screen Tints:", "Draw 2D overlays (e.g. force sight)", 38 )
		}
		//cg_newFX "0" bitfield
		itemDef { // 0
			COMMON( cg_noPredict, tabWindow1, ITEM_TYPE_YESNO, 364 247 270 16 )
			YESNO( "cg_noPredict", "No Prediction:", "Disable client movement prediction", 33 )
		}
		itemDef { // 1
			COMMON( cg_predictGrapple, tabWindow1, ITEM_TYPE_YESNO, 364 263 270 16 )
			YESNO( "cg_predictGrapple", "Predict Grapple:", "Disable grapple hook prediction", 24 )
		}
		itemDef { // 1
			COMMON( cg_predictItems, tabWindow1, ITEM_TYPE_YESNO, 364 279 270 16 )
			YESNO( "cg_predictItems", "Predict Items:", "Disable predicted item pickup", 34 )
		}
		itemDef { // 1
			COMMON( cg_renderToTextureFX, tabWindow1, ITEM_TYPE_YESNO, 364 295 270 16 )
			YESNO( "cg_renderToTextureFX", "Render To Texture FX:", "Enable refraction effects (e.g. force push blur, protection bubble)", 0 )
		}
		itemDef {
			COMMON( cg_scorePlums, tabWindow1, ITEM_TYPE_MULTI, 364 311 270 16 )
			MULTI_STR( "cg_scorePlums", { "Off"; "0"; "If enabled on server"; "1"; "Force enabled"; "2" }, "Enable feedback for scoring", "Score Plumes:", 44 )
		}
		itemDef {
			COMMON( cg_shadows, tabWindow1, ITEM_TYPE_MULTI, 364 327 270 16 )
			MULTI_STR( "cg_shadows", { "Off"; "0"; "Blob (default)"; "1"; "Stencil"; "2"; "Projection"; "3" }, "Type of shadows to use", "Shadows:", 64 )
		}
		itemDef { // 0
			COMMON( cg_simpleItems, tabWindow1, ITEM_TYPE_YESNO, 364 343 270 16 )
			YESNO( "cg_simpleItems", "Simple Items:", "2D or 3D item pickups", 40 )
		}
		itemDef {
			COMMON( cg_simpleItems, tabWindow1, ITEM_TYPE_SLIDER, 364 359 270 16 )
			SLIDER( "cg_simpleItems" 1.0 0.1 2.0, "Size of 2D items", "Simple Items Size:", 16, 159 16 8 16 )
			cvarTest	"cg_simpleItems"
			hideCvar	{ "0" }
		}

		// strafe trail
		BACKGROUND_B( tabWindow1, 362 376 273 49 )
		BACKGROUND_TITLE( tabWindow1, 409 378 180 14 )
		TITLE_SMALL( text_w1_strafetrail, tabWindow1, 495 378 135 14, "Strafe Trail" )
		itemDef { // 0
			COMMON( cg_strafeTrail, tabWindow1, ITEM_TYPE_YESNO, 364 392 270 16 )
			YESNO( "cg_strafeTrail", "Strafe Trail:", "Enable strafe jump trail effect", 4 )
		}
		itemDef { // 300 1500
			COMMON( cg_strafeTrailWeights, tabWindow1, ITEM_TYPE_EDITFIELD, 364 408 270 16 )
			EDITFIELD( "cg_strafeTrailWeights", "Threshold for displaying strafe jump trail", 19, 19, "Min/Max Speed:", 0 )
			cvarTest	"cg_strafeTrail"
			hideCvar	{ "0" }
		}

		// speed trail
		BACKGROUND_B( tabWindow2, 84 4 273 33 )
		BACKGROUND_TITLE( tabWindow2, 131 6 180 14 )
		TITLE_SMALL( text_w2_speedtrail, tabWindow2, 218 6 135 14, "Speed Trail" )
		itemDef {
			COMMON( cg_speedTrail, tabWindow2, ITEM_TYPE_MULTI, 86 20 270 16 )
			MULTI_STR( "cg_speedTrail", { "Off"; "0"; "On"; "1" }, "Force speed trail type", "Speed Trail:", 0 )
		}

		// HUD
		BACKGROUND_B( tabWindow2, 84 38 273 385 )
		BACKGROUND_TITLE( tabWindow2, 131 40 180 14 )
		TITLE_SMALL( text_w2_hud, tabWindow2, 218 40 135 14, "HUD" )
		itemDef { // 0
			COMMON( cg_draw2D, tabWindow2, ITEM_TYPE_YESNO, 86 54 270 16 )
			YESNO( "cg_draw2D", "Draw 2D Overlay:", "Disable entire HUD", 23 )
		}
		itemDef { // 1
			COMMON( cg_draw3DIcons, tabWindow2, ITEM_TYPE_YESNO, 86 70 270 16 )
			YESNO( "cg_draw3DIcons", "Show 3D Icons:", "Show 3D models for flags and siege icons", 33 )
		}
		itemDef {
			COMMON( cg_drawFPS, tabWindow2, ITEM_TYPE_MULTI, 86 86 270 16 )
			MULTI_STR( "cg_drawFPS", { "No (default)"; "0"; "Yes"; "1"; "Yes + Frametime"; "2" }, "Show framerate in the top-right corner", "Show FPS:", 57 )
		}
		itemDef { // 1
			COMMON( cg_drawIcons, tabWindow2, ITEM_TYPE_YESNO, 86 102 270 16 )
			YESNO( "cg_drawIcons", "Show 2D Icons:", "Disable 2D icons for flags and siege icons", 33 )
		}
		itemDef { // 1
			COMMON( cg_drawRadar, tabWindow2, ITEM_TYPE_YESNO, 86 118 270 16 )
			YESNO( "cg_drawRadar", "Show Radar:", "Show radar in the top-right corner", 48 )
		}
		itemDef { // 0
			COMMON( cg_drawRewards, tabWindow2, ITEM_TYPE_YESNO, 86 134 270 16 )
			YESNO( "cg_drawRewards", "Show Rewards:", "Show Quake 3 style rewards", 38 )
		}
		itemDef {
			COMMON( cg_drawScores, tabWindow2, ITEM_TYPE_MULTI, 86 150 270 16 )
			MULTI_STR( "cg_drawScores", { "No"; "0"; "Yes (default)"; "1"; "With Mini Scoreboard"; "2" }, "Style of the scoreboard in the top-right", "Show Scores:", 43 )
		}
		itemDef { // 0
			COMMON( cg_drawScoresNet, tabWindow2, ITEM_TYPE_YESNO, 86 166 270 16 )
			YESNO( "cg_drawScoresNet", "Show Net Scores:", "Show net score along kills/deaths on scoreboard", 24 )
		}
		itemDef { // 0
			COMMON( cg_drawSpectatorNames, tabWindow2, ITEM_TYPE_YESNO, 86 182 270 16 )
			YESNO( "cg_drawSpectatorNames", "Show Spectator Names:", "Show player names when spectating", 0 )
		}
		itemDef {
			COMMON( cg_drawStatus, tabWindow2, ITEM_TYPE_MULTI, 86 198 270 16 )
			MULTI_STR( "cg_drawStatus", { "Off"; "0"; "On (default)"; "1"; "With flags"; "2" }, "???", "Show HUD:", 15 )
		}
		itemDef { // 0
			COMMON( cg_drawTeamOverlay, tabWindow2, ITEM_TYPE_YESNO, 86 214 270 16 )
			YESNO( "cg_drawTeamOverlay", "Team Overlay:", "Show team overlay", 39 )
		}
		itemDef {
			COMMON( cg_drawTimer, tabWindow2, ITEM_TYPE_MULTI, 86 230 270 16 )
			MULTI_STR( "cg_drawTimer", { "Off (default)"; "0"; "On"; "1"; "Countdown"; "2"; "Colour"; "4"; "Countdown + Colour"; "6" }, "Style of match timer in the top-right corner", "Show Match Timer:", 19 )
		}
		itemDef { // ui/jahud.txt
			COMMON( cg_hudFiles, tabWindow2, ITEM_TYPE_EDITFIELD, 86 246 270 16 )
			EDITFIELD( "cg_hudFiles", "Which file to use for HUD definition", 19, 19, "HUD file:", 58 )
		}
		itemDef { // 2 240
			COMMON( cg_hudStatsPos, tabWindow2, ITEM_TYPE_EDITFIELD, 86 262 270 16 )
			EDITFIELD( "cg_hudStatsPos", "'X Y' position of the extra stats HUD", 19, 19, "Stats HUD Pos:", 34 )
		}
		itemDef { // 0.375
			COMMON( cg_hudStatsScale, tabWindow2, ITEM_TYPE_EDITFIELD, 86 278 270 16 )
			EDITFIELD( "cg_hudStatsScale", "Font size of the extra stats HUD", 19, 19, "Stats HUD Scale:", 24 )
		}
		itemDef { // 0
			//FIXME: bit-field or multi
			COMMON( cg_lagometer, tabWindow2, ITEM_TYPE_YESNO, 86 294 270 16 )
			YESNO( "cg_lagometer", "Lagometer:", "Show latency and snapshot interpolation graphs", 53 )
		}
		itemDef { // 592 320
			COMMON( cg_lagometerPos, tabWindow2, ITEM_TYPE_EDITFIELD, 86 310 270 16 )
			EDITFIELD( "cg_lagometerPos", "'X Y' position of the lagometer", 19, 19, "Lagometer Pos:", 34 )
			cvarTest	"cg_lagometer"
			hideCvar	{ "0" }
		}
		itemDef { // 0
			COMMON( cg_queueCenterprint, tabWindow2, ITEM_TYPE_YESNO, 86 326 270 16 )
			YESNO( "cg_queueCenterprint", "Queue Centerprint:", "Use a queue for announcements, or overwrite as new ones come in", 14 )
		}
		itemDef { // 0
			COMMON( cg_statsHUD, tabWindow2, ITEM_TYPE_YESNO, 86 342 270 16 )
			YESNO( "cg_statsHUD", "Stats HUD:", "Show extra stats on the HUD", 53 )
		}
		itemDef {
			COMMON( cg_topRightFont, tabWindow2, ITEM_TYPE_MULTI, 86 358 270 16 )
			MULTI_STR( "cg_topRightFont", { "Small (default)"; "1"; "Medium"; "2"; "Large"; "3"; "Small 2"; "4"; "JA++ large"; "5"; "JA++ small (default)"; "6"; "JA++ monospace"; "7" }, "Font for info in the top-right corner", "Top-Right Font:", 29 )
		}
		itemDef {
			COMMON( cg_topRightSize, tabWindow2, ITEM_TYPE_SLIDER, 86 374 270 16 )
			SLIDER( "cg_topRightSize" 1.0 0.1 2.0, "Font size for info in the top-right corner", "Top-Right Size:", 29, 160 16 8 16 )
		}
		itemDef { // 0
			COMMON( japp_preciseFonts, tabWindow2, ITEM_TYPE_YESNO, 86 390 270 16 )
			YESNO( "japp_preciseFonts", "Precise Fonts:", "Sub-pixel text positioning", 33 )
		}
		itemDef { // 0
			COMMON( japp_ratioFix, tabWindow2, ITEM_TYPE_YESNO, 86 406 270 16 )
			YESNO( "japp_ratioFix", "Ratio Fix:", "Fix non-4:3 (widescreen) resolutions stretching 2D elements", 52 )
		}

		// HUD: crosshair
		BACKGROUND_B( tabWindow2, 362 4 273 176 )
		BACKGROUND_TITLE( tabWindow2, 409 6 180 14 )
		TITLE_SMALL( text_w2_crosshair, tabWindow2, 495 6 135 14, "HUD: Crosshair" )
		itemDef { // 1
			COMMON( cg_drawCrosshair, tabWindow2, ITEM_TYPE_YESNO, 364 20 270 16 )
			YESNO( "cg_drawCrosshair", "Show Crosshair:", "Show the crosshair", 4 )
		}
		itemDef {
			COMMON( ownerdraw_crosshair, tabWindow2, ITEM_TYPE_OWNERDRAW, 364 36 270 16 )
			OWNERDRAW( UI_CROSSHAIR, "Crosshair:", "Choose which crosshair to use", 28 )
			cvarTest	"cg_drawCrosshair"
			hideCvar	{ "0" }
		}
		itemDef { // 255 255 255 255
			COMMON( cg_crosshairColour, tabWindow2, ITEM_TYPE_EDITFIELD, 364 52 270 16 )
			EDITFIELD( "cg_crosshairColour", "'R G B A' colour of the crosshair'", 19, 19, "XHair RGBA:", 24 )
			cvarTest	"cg_drawCrosshair"
			hideCvar	{ "0" }
		}
		itemDef { // 0
			COMMON( cg_crosshairHealth, tabWindow2, ITEM_TYPE_YESNO, 364 68 270 16 )
			YESNO( "cg_crosshairHealth", "XHair HP:", "Tint your crosshair based on your health", 34 )
			cvarTest	"cg_drawCrosshair"
			hideCvar	{ "0" }
		}
		itemDef { // 0
			COMMON( cg_crosshairLerp, tabWindow2, ITEM_TYPE_YESNO, 364 84 270 16 )
			YESNO( "cg_crosshairLerp", "XHair Smoothing:", "Interpolate position of the crosshair", 0 )
			cvarTest	"cg_drawCrosshair"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( cg_crosshairSize, tabWindow2, ITEM_TYPE_SLIDER, 364 100 270 16 )
			SLIDER( "cg_crosshairSize" 24 8 64, "Size of the crosshair", "XHair Size:", 24, 185 16 8 16 )
			cvarTest	"cg_drawCrosshair"
			hideCvar	{ "0" }
		}
		itemDef { // 1
			COMMON( cg_crosshairTint, tabWindow2, ITEM_TYPE_YESNO, 364 116 270 16 )
			YESNO( "cg_crosshairTint", "XHair Tint:", "Tint your crosshair based on your team", 24 )
			cvarTest	"cg_drawCrosshair"
			hideCvar	{ "0" }
		}
		itemDef { // 1
			COMMON( cg_drawCrosshairNames, tabWindow2, ITEM_TYPE_YESNO, 364 132 270 16 )
			YESNO( "cg_drawCrosshairNames", "XHair Names:", "Draw player names when targeting them", 19 )
			cvarTest	"cg_drawCrosshair"
			hideCvar	{ "0" }
		}
		itemDef { // 1
			COMMON( cg_dynamicCrosshair, tabWindow2, ITEM_TYPE_YESNO, 364 148 270 16 )
			YESNO( "cg_dynamicCrosshair", "XHair Realism:", "Accurate crosshair that collides with objects", 10 )
			cvarTest	"cg_drawCrosshair"
			hideCvar	{ "0" }
		}
		itemDef { // 1
			COMMON( cg_dynamicCrosshairPrecision, tabWindow2, ITEM_TYPE_YESNO, 364 164 270 16 )
			YESNO( "cg_dynamicCrosshairPrecision", "XHair Precision:", "Use Ghoul2 tracing for realistic crosshair", 0 )
			cvarTest	"cg_drawCrosshair"
			hideCvar	{ "0" }
		}

		// HUD: movement keys
		BACKGROUND_B( tabWindow2, 362 181 273 64 )
		BACKGROUND_TITLE( tabWindow2, 409 183 180 14 )
		TITLE_SMALL( text_w2_movementkeys, tabWindow2, 495 183 135 14, "HUD: Movement Keys" )
		itemDef { // 0
			COMMON( cg_movementKeys, tabWindow2, ITEM_TYPE_YESNO, 364 197 270 16 )
			YESNO( "cg_movementKeys", "Movement Keys:", "Show which movement keys are being pressed", 0 )
		}
		itemDef { // 320 240
			COMMON( cg_movementKeysPos, tabWindow2, ITEM_TYPE_EDITFIELD, 364 213 270 16 )
			EDITFIELD( "cg_movementKeysPos", "'X Y' position of the movement keys overlay'", 19, 19, "Position:", 25 )
			cvarTest	"cg_movementKeys"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( cg_movementKeysScale, tabWindow2, ITEM_TYPE_SLIDER, 364 229 270 16 )
			SLIDER( "cg_movementKeysScale" 1.0 0.1 3.0, "Font size of the movement keys overlay", "Size:", 45, 193 16 8 16 )
			cvarTest	"cg_movementKeys"
			hideCvar	{ "0" }
		}

		// HUD: strafe helper
		BACKGROUND_B( tabWindow2, 362 246 273 112 )
		BACKGROUND_TITLE( tabWindow2, 409 248 180 14 )
		TITLE_SMALL( text_w2_strafehelper, tabWindow2, 495 248 135 14, "HUD: Strafe Helper" )
		itemDef { // 0
			COMMON( cg_strafeHelper, tabWindow2, ITEM_TYPE_YESNO, 364 262 270 16 )
			YESNO( "cg_strafeHelper", "Strafe Helper:", "Show strafe jump helper HUD (SMod style)", 0 )
		}
		itemDef {
			COMMON( cg_strafeHelperAngle, tabWindow2, ITEM_TYPE_SLIDER, 364 278 270 16 )
			SLIDER( "cg_strafeHelperAngle" 20 1 180, "Offset the desired angle of the strafe helper lines", "Angle:", 39, 185 16 8 16 )
			cvarTest	"cg_strafeHelper"
			hideCvar	{ "0" }
		}
		itemDef { // 0 255 255 255
			COMMON( cg_strafeHelperColor, tabWindow2, ITEM_TYPE_EDITFIELD, 364 294 270 16 )
			EDITFIELD( "cg_strafeHelperColor", "'R G B A' colour of the strafe helper HUD", 19, 19, "Colour:", 34 )
			cvarTest	"cg_strafeHelper"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( cg_strafeHelperLength, tabWindow2, ITEM_TYPE_SLIDER, 364 310 270 16 )
			SLIDER( "cg_strafeHelperLength" 100 10 300, "Length of the strafe helper lines", "Length:", 34, 185 16 8 16 )
			cvarTest	"cg_strafeHelper"
			hideCvar	{ "0" }
		}
		itemDef { // 1
			COMMON( cg_strafeHelperRadius, tabWindow2, ITEM_TYPE_YESNO, 364 326 270 16 )
			YESNO( "cg_strafeHelperRadius", "Radius:", "Radius of the strafe helper lines", 34 )
			cvarTest	"cg_strafeHelper"
			hideCvar	{ "0" }
		}
		itemDef { // 1
			COMMON( cg_strafeHelperVelocity, tabWindow2, ITEM_TYPE_YESNO, 364 342 270 16 )
			YESNO( "cg_strafeHelperVelocity", "Velocity:", "Show your velocity vector alongside the strafe helper lines", 24 )
			cvarTest	"cg_strafeHelper"
			hideCvar	{ "0" }
		}

		// HUD: accelerometer
		BACKGROUND_B( tabWindow2, 362 359 273 64 )
		BACKGROUND_TITLE( tabWindow2, 409 361 180 14 )
		TITLE_SMALL( text_w2_accelerometer, tabWindow2, 495 361 135 14, "HUD: Accelerometer" )
		itemDef { // 0
			COMMON( cg_accelerometer, tabWindow2, ITEM_TYPE_YESNO, 364 375 270 16 )
			YESNO( "cg_accelerometer", "Show Accelerometer:", "Show accelerometer", 0 )
		}
		itemDef { // 320 360
			COMMON( cg_accelerometerPos, tabWindow2, ITEM_TYPE_EDITFIELD, 364 391 270 16 )
			EDITFIELD( "cg_accelerometerPos", "'X Y' position of the accelerometer", 19, 19, "Position:", 49 )
			cvarTest	"cg_accelerometer"
			hideCvar	{ "0" }
		}
		itemDef { // 128 20
			COMMON( cg_accelerometerSize, tabWindow2, ITEM_TYPE_EDITFIELD, 364 407 270 16 )
			EDITFIELD( "cg_accelerometerSize", "'WIDTH HEIGHT' size of the accelerometer", 19, 19, "Size:", 69 )
			cvarTest	"cg_accelerometer"
			hideCvar	{ "0" }
		}

		// HUD: chatbox
		BACKGROUND_B( tabWindow3, 84 4 273 176 )
		BACKGROUND_TITLE( tabWindow3, 131 6 180 14 )
		TITLE_SMALL( text_w3_chatbox, tabWindow3, 218 6 135 14, "HUD: Chatbox" )
		itemDef {
			COMMON( cg_newChatbox, tabWindow3, ITEM_TYPE_MULTI, 86 20 270 16 )
			MULTI_STR( "cg_newChatbox", { "Off"; "0"; "On (default)"; "1" }, "Use the new advanced chatbox", "New Chatbox:", 25 )
		}
		// old chatbox
		itemDef { // 10000
			COMMON( cg_chatbox, tabWindow3, ITEM_TYPE_NUMERICFIELD, 86 36 270 16 )
			NUMERIC( "cg_chatbox", "How many milliseconds to show chat messages", 5, 5, "Chatbox:", 44 )
			cvarTest	"cg_newChatbox"
			hideCvar	{ "1" }
		}
		itemDef { // 350
			COMMON( cg_chatboxHeight, tabWindow3, ITEM_TYPE_NUMERICFIELD, 86 52 270 16 )
			NUMERIC( "cg_chatboxHeight", "Height of the chatbox", 5, 5, "Height:", 48 )
			cvarTest	"cg_newChatbox"
			hideCvar	{ "1" }
		}
		// new chatbox
		itemDef { // 0.0 0.0 0.0 0.0
			COMMON( cg_chatboxBackground, tabWindow3, ITEM_TYPE_EDITFIELD, 86 36 270 16 )
			EDITFIELD( "cg_chatboxBackground", "'R G B A' background colour", 19, 19, "Background RGBA:", 5 )
			cvarTest	"cg_newChatbox"
			hideCvar	{ "0" }
		}
		itemDef { // 1
			COMMON( cg_chatboxCompletion, tabWindow3, ITEM_TYPE_YESNO, 86 52 270 16 )
			YESNO( "cg_chatboxCompletion", "Tab completion:", "Enable tab-completion for player names", 9 )
			cvarTest	"cg_newChatbox"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( cg_chatboxFont, tabWindow3, ITEM_TYPE_MULTI, 86 68 270 16 )
			MULTI_STR( "cg_chatboxFont", { "Small (default)"; "1"; "Medium"; "2"; "Large"; "3"; "Small 2"; "4"; "JA++ large"; "5"; "JA++ small"; "6"; "JA++ monospace"; "7" }, "Font to use for the chatbox", "Font:", 58 )
			cvarTest	"cg_newChatbox"
			hideCvar	{ "0" }
		}
		itemDef { // 5
			COMMON( cg_chatboxLineCount, tabWindow3, ITEM_TYPE_NUMERICFIELD, 86 84 270 16 )
			NUMERIC( "cg_chatboxLineCount", "How many lines of chat to show", 5, 5, "Line Count:", 28 )
			cvarTest	"cg_newChatbox"
			hideCvar	{ "0" }
		}
		itemDef { // 30 290
			COMMON( cg_chatboxPos, tabWindow3, ITEM_TYPE_EDITFIELD, 86 100 270 16 )
			EDITFIELD( "cg_chatboxPos", "'X Y' position of the chatbox'", 19, 19, "Position:", 38 )
			cvarTest	"cg_newChatbox"
			hideCvar	{ "0" }
		}
		itemDef { // 0.65 350
			COMMON( cg_chatboxSize, tabWindow3, ITEM_TYPE_EDITFIELD, 86 116 270 16 )
			EDITFIELD( "cg_chatboxSize", "'FONT_SCALE WIDTH' size of the chatbox", 19, 19, "Size:", 57 )
			cvarTest	"cg_newChatbox"
			hideCvar	{ "0" }
		}
		itemDef { // 0
			COMMON( cg_chatboxTabs, tabWindow3, ITEM_TYPE_YESNO, 86 132 270 16 )
			YESNO( "cg_chatboxTabs", "Use Tabs:", "Use tabbed chatbox (for PMs, teams, channels)", 38 )
			cvarTest	"cg_newChatbox"
			hideCvar	{ "0" }
		}
		itemDef { // 1
			COMMON( cg_chatboxTimeShow, tabWindow3, ITEM_TYPE_YESNO, 86 148 270 16 )
			YESNO( "cg_chatboxTimeShow", "Timestamp:", "Timestamp messages in the chatbox", 34 )
			cvarTest	"cg_newChatbox"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( cg_chatboxTimeColour, tabWindow3, ITEM_TYPE_MULTI, 86 164 270 16 )
			MULTI_STR( "cg_chatboxTimeColour", { "^0Black"; "0"; "^1Red"; "1"; "^2Green"; "2"; "^3Yellow"; "3"; "^4Blue"; "4"; "^5Cyan"; "5"; "^6Magenta"; "6"; "^7White"; "7"; "^8Orange"; "8"; "^9Grey"; "9" }, "Colour of the timestamp", "Timestamp Colour:", 0 )
			cvarTest	"cg_newChatbox"
			hideCvar	{ "0" }
			cvarTest2	"cg_chatboxTimeShow"
			hideCvar2	{ "0" }
		}

		// HUD: scoreboard
		BACKGROUND_B( tabWindow3, 84 181 273 80 )
		BACKGROUND_TITLE( tabWindow3, 131 183 180 14 )
		TITLE_SMALL( text_w3_scoreboard, tabWindow3, 218 183 135 14, "HUD: Scoreboard" )
		itemDef {
			COMMON( cg_newScoreboard, tabWindow3, ITEM_TYPE_MULTI, 86 197 270 16 )
			MULTI_STR( "cg_newScoreboard", { "Default"; "0"; "q3pro"; "1"; "JA++"; "2" }, "Scoreboard type", "Scoreboard Type:", 0 )
		}
		// new scoreboard
		itemDef {
			COMMON( cg_newScoreboardFont, tabWindow3, ITEM_TYPE_MULTI, 86 213 270 16 )
			MULTI_STR( "cg_newScoreboardFont", { "Small (default)"; "1"; "Medium"; "2"; "Large"; "3"; "Small 2"; "4"; "JA++ large"; "5"; "JA++ small"; "6"; "JA++ monospace (default)"; "7" }, "Font to use for the new scoreboard", "Font:", 54 )
			cvarTest	"cg_newScoreboard"
			showCvar	{ "2" }
		}
		itemDef {
			COMMON( cg_newScoreboardFontSize, tabWindow3, ITEM_TYPE_SLIDER, 86 229 270 16 )
			SLIDER( "cg_newScoreboardFontSize" 0.33333 0.1 2.0, "Font size for the new scoreboard", "Font Size:", 29, 185 16 8 16 )
			cvarTest	"cg_newScoreboard"
			showCvar	{ "2" }
		}
		itemDef { // 1
			COMMON( cg_newScoreboardShowKPM, tabWindow3, ITEM_TYPE_YESNO, 86 245 270 16 )
			YESNO( "cg_newScoreboardShowKPM", "Show KPM:", "Show kills per minute on the scoreboard", 34 )
			cvarTest	"cg_newScoreboard"
			showCvar	{ "2" }
		}
		// old scoreboard
		itemDef { // 0
			COMMON( cg_oldScoreboardShowBots, tabWindow3, ITEM_TYPE_YESNO, 86 213 270 16 )
			YESNO( "cg_oldScoreboardShowBots", "Show Bots:", "Show bot indicators on the scoreboard", 29 )
			cvarTest	"cg_newScoreboard"
			showCvar	{ "0" }
		}
		itemDef { // 0
			COMMON( cg_oldScoreboardSkinIcons, tabWindow3, ITEM_TYPE_YESNO, 86 229 270 16 )
			YESNO( "cg_oldScoreboardSkinIcons", "Skin Icons:", "Show player model/skin icons on the scoreboard", 24 )
			cvarTest	"cg_newScoreboard"
			showCvar	{ "0" }
		}

		// HUD: automap
		BACKGROUND_B( tabWindow3, 84 262 273 160 )
		BACKGROUND_TITLE( tabWindow3, 131 264 180 14 )
		TITLE_SMALL( text_w3_automap, tabWindow3, 218 264 135 14, "HUD: Automap" )
		itemDef { // 0
			COMMON( r_autoMap, tabWindow3, ITEM_TYPE_YESNO, 86 278 270 16 )
			YESNO( "r_autoMap", "Automap:", "Enable the world map", 30 )
		}
		itemDef { // 0
			COMMON( r_autoMapAdjustHeight, tabWindow3, ITEM_TYPE_YESNO, 86 294 270 16 )
			YESNO( "r_autoMapAdjustHeight", "Adjust Height:", "Height bias for the world map", 0 )
			cvarTest	"r_autoMap"
			hideCvar	{ "0" }
		}
		itemDef { // 90.0 0.0 0.0
			COMMON( r_autoMapAngle, tabWindow3, ITEM_TYPE_EDITFIELD, 86 310 270 16 )
			EDITFIELD( "r_autoMapAngle", "Rotation of the world map", 19, 19, "Angle:", 39 )
			cvarTest	"r_autoMap"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( r_autoMapFov, tabWindow3, ITEM_TYPE_SLIDER, 86 326 270 16 )
			SLIDER( "r_autoMapFov" 90 50 150, "Field of view for the world map", "FOV:", 49, 194 16 8 16 )
			cvarTest	"r_autoMap"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( r_autoMapH, tabWindow3, ITEM_TYPE_SLIDER, 86 342 270 16 )
			SLIDER( "r_autoMapH" 128 -256 256, "Height of the world map", "Height:", 34, 194 16 8 16 )
			cvarTest	"r_autoMap"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( r_autoMapW, tabWindow3, ITEM_TYPE_SLIDER, 86 358 270 16 )
			SLIDER( "r_autoMapW" 128 -256 256, "Width of the world map", "Width:", 39, 194 16 8 16 )
			cvarTest	"r_autoMap"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( r_autoMapX, tabWindow3, ITEM_TYPE_SLIDER, 86 374 270 16 )
			SLIDER( "r_autoMapX" 496 -512 512, "X position of the world map", "X:", 59, 194 16 8 16 )
			cvarTest	"r_autoMap"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( r_autoMapY, tabWindow3, ITEM_TYPE_SLIDER, 86 390 270 16 )
			SLIDER( "r_autoMapY" 32 -40 40, "Y position of the world map", "Y:", 59, 194 16 8 16 )
			cvarTest	"r_autoMap"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( r_autoMapZoom, tabWindow3, ITEM_TYPE_SLIDER, 86 406 270 16 )
			SLIDER( "r_autoMapZoom" 768 256 1024, "Zoom factor of the world map", "Zoom:", 44, 194 16 8 16 )
			cvarTest	"r_autoMap"
			hideCvar	{ "0" }
		}

		// camera: view
		BACKGROUND_B( tabWindow3, 362 4 273 96 )
		BACKGROUND_TITLE( tabWindow3, 409 6 180 14 )
		TITLE_SMALL( text_w3_view, tabWindow3, 495 6 135 14, "Camera: View" )
		itemDef {
			COMMON( cg_fakeGun, tabWindow3, ITEM_TYPE_MULTI, 364 20 270 16 )
			MULTI_STR( "cg_fakeGun", { "Off (default)"; "0"; "Stun Baton"; "1"; "Lightsaber"; "3"; "DL-44 Pistol"; "4"; "E-11 Blaster"; "5"; "Disruptor"; "6"; "Bowcaster"; "7"; "Heavy Repeater"; "8"; "DEMP2"; "9"; "Flechette"; "10"; "Rocket Launcher"; "11"; "Thermal Detonator"; "12"; "Trip Mine"; "13"; "Det Pack"; "14"; "Concussion Rifle"; "15"; "Bryar Pistol"; "16"; "Emplaced Gun"; "17"; "Turret"; "18" }, "Pretend you're holding a gun in first-person camera", "Fake Gun:", 24 )
		}
		itemDef { // 0
			COMMON( cg_instantDuck, tabWindow3, ITEM_TYPE_YESNO, 364 36 270 16 )
			YESNO( "cg_instantDuck", "Instant Duck:", "Slide or Instantly move the camera when crouching", 4 )
		}
		itemDef { // 0
			COMMON( cg_smoothCamera, tabWindow3, ITEM_TYPE_YESNO, 364 52 270 16 )
			YESNO( "cg_smoothCamera", "Smooth Camera:", "Smoother camera motion", 0 )
		}
		itemDef { // 0.002 0.002 0.005 1
			COMMON( cg_viewBob, tabWindow3, ITEM_TYPE_EDITFIELD, 364 68 270 16 )
			EDITFIELD( "cg_viewBob", "Pitch / Yaw / Roll / Enabled", 19, 19, "View Bobbing:", 4 )
		}
		itemDef { // 1
			COMMON( cg_viewShake, tabWindow3, ITEM_TYPE_YESNO, 364 84 270 16 )
			YESNO( "cg_viewShake", "View Shake:", "Enable camera shaking effects", 14 )
		}

		// camera: field of view
		BACKGROUND_B( tabWindow3, 362 101 273 80 )
		BACKGROUND_TITLE( tabWindow3, 409 103 180 14 )
		TITLE_SMALL( text_w3_fov, tabWindow3, 495 103 135 14, "Camera: Field Of View" )
		itemDef {
			COMMON( cg_fov, tabWindow3, ITEM_TYPE_SLIDER, 364 117 270 16 )
			SLIDER( "cg_fov" 80 50 150, "Field of view", "FOV:", 82, 160 16 8 16 )
		}
		itemDef { // 0
			COMMON( cg_fovViewmodel, tabWindow3, ITEM_TYPE_YESNO, 364 133 270 16 )
			YESNO( "cg_fovViewmodel", "Viewmodel FOV Adjust:", "Enable first-person weapon field of view adjustment", 0 )
		}
		itemDef {
			COMMON( cg_fovViewmodel, tabWindow3, ITEM_TYPE_SLIDER, 364 149 270 16 )
			SLIDER( "cg_fovViewmodel" 1.0 1.0 180, "Field of view for first-person weapon", "Viewmodel FOV:", 34, 160 16 8 16 )
			cvarTest	"cg_fovViewmodel"
			hideCvar	{ "0" }
		}
		itemDef { // 0
			COMMON( cg_fovAspectAdjust, tabWindow3, ITEM_TYPE_YESNO, 364 165 270 16 )
			YESNO( "cg_fovAspectAdjust", "Widescreen Fix:", "Fix non-4:3 (widescreen) resolutions field of view calculation", 30 )
		}

		// camera: viewmodel
		BACKGROUND_B( tabWindow3, 362 182 273 144 )
		BACKGROUND_TITLE( tabWindow3, 409 184 180 14 )
		TITLE_SMALL( text_w3_viewmodel, tabWindow3, 495 184 135 14, "Camera: Viewmodel" )
		itemDef {
			COMMON( cg_drawGun, tabWindow3, ITEM_TYPE_MULTI, 364 198 270 16 )
			YESNO( "cg_drawGun", "Draw Gun:", "Show the first-person weapon model", 23 )
		}
		itemDef { // 0 0 0
			COMMON( cg_gunAlign, tabWindow3, ITEM_TYPE_EDITFIELD, 364 214 270 16 )
			EDITFIELD( "cg_gunAlign", "X / Y / Z", 19, 19, "Alignment:", 18 )
		}
		itemDef { // 1
			COMMON( cg_gunBobEnable, tabWindow3, ITEM_TYPE_YESNO, 364 230 270 16 )
			YESNO( "cg_gunBobEnable", "Bobbing:", "Enable gun movement when running and jumping", 28 )
		}
		itemDef { // 1
			COMMON( cg_gunIdleDriftEnable, tabWindow3, ITEM_TYPE_YESNO, 364 246 270 16 )
			YESNO( "cg_gunIdleDriftEnable", "Idle Drift:", "Enable gun drifting", 14 )
		}
		itemDef { // 0
			COMMON( cg_gunMomentumEnable, tabWindow3, ITEM_TYPE_YESNO, 364 262 270 16 )
			YESNO( "cg_gunMomentumEnable", "Momentum Sway:", "Enable gun sway when looking around and moving", 0 )
		}
		itemDef {
			COMMON( cg_gunMomentumDamp, tabWindow3, ITEM_TYPE_SLIDER, 364 278 270 16 )
			SLIDER( "cg_gunMomentumDamp" 1.0 0.6 10.0, "Gun sway smoothing factor", "Damping:", 29, 194 16 8 16 )
			cvarTest	"cg_gunMomentumEnable"
			showCvar	{ "1" }
		}
		itemDef {
			COMMON( cg_gunMomentumFall, tabWindow3, ITEM_TYPE_SLIDER, 364 294 270 16 )
			SLIDER( "cg_gunMomentumFall" 0.5 0.0 1.0, "Gun sway factor when falling", "Fall:", 44, 194 16 8 16 )
			cvarTest	"cg_gunMomentumEnable"
			showCvar	{ "1" }
		}
		itemDef {
			COMMON( cg_gunMomentumInterval, tabWindow3, ITEM_TYPE_SLIDER, 364 310 270 16 )
			SLIDER( "cg_gunMomentumInterval" 2.5 0.0 5.0, "Gun sway fluidity", "Interval:", 25, 194 16 8 16 )
			cvarTest	"cg_gunMomentumEnable"
			showCvar	{ "1" }
		}

		// camera: third person
		BACKGROUND_B( tabWindow4, 84 4 273 176 )
		BACKGROUND_TITLE( tabWindow4, 131 6 180 14 )
		TITLE_SMALL( text_w4_thirdperson, tabWindow4, 218 6 135 14, "Camera: Third Person" )
		itemDef { // 0
			COMMON( cg_thirdPerson, tabWindow4, ITEM_TYPE_YESNO, 86 20 270 16 )
			YESNO( "cg_thirdPerson", "3rd Person:", "Enable third person camera", 34 )
		}
		itemDef {
			COMMON( cg_thirdPersonAlpha, tabWindow4, ITEM_TYPE_SLIDER, 86 36 270 16 )
			SLIDER( "cg_thirdPersonAlpha" 1.0 0.0 1.0, "Transparency of your character when in third person camera", "Alpha:", 58, 175 16 8 16 )
			cvarTest	"cg_thirdPerson"
			showCvar	{ "1" }
		}
		itemDef {
			COMMON( cg_thirdPersonAngle, tabWindow4, ITEM_TYPE_SLIDER, 86 52 270 16 )
			SLIDER( "cg_thirdPersonAngle" 0 -180 180, "Angle of the third person camera", "Angle:", 58, 175 16 8 16 )
			cvarTest	"cg_thirdPerson"
			showCvar	{ "1" }
		}
		itemDef {
			COMMON( cg_thirdPersonCameraDamp, tabWindow4, ITEM_TYPE_SLIDER, 86 68 270 16 )
			SLIDER( "cg_thirdPersonCameraDamp" 0.3 0.0 1.0, "Smoothing factor of the third person camera", "Camera Damping:", 14, 175 16 8 16 )
			cvarTest	"cg_thirdPerson"
			showCvar	{ "1" }
		}
		itemDef {
			COMMON( cg_thirdPersonHorzOffset, tabWindow4, ITEM_TYPE_SLIDER, 86 84 270 16 )
			SLIDER( "cg_thirdPersonHorzOffset" 0 -32 32, "Horizontal offset of the third person camera", "Horizontal Offset:", 0, 175 16 8 16 )
			cvarTest	"cg_thirdPerson"
			showCvar	{ "1" }
		}
		itemDef {
			COMMON( cg_thirdPersonPitchOffset, tabWindow4, ITEM_TYPE_SLIDER, 86 100 270 16 )
			SLIDER( "cg_thirdPersonPitchOffset" 0 -24 48, "Vertical offset (height) of the third person following camera", "Pitch Offset:", 24, 175 16 8 16 )
			cvarTest	"cg_thirdPerson"
			showCvar	{ "1" }
		}
		itemDef {
			COMMON( cg_thirdPersonRange, tabWindow4, ITEM_TYPE_SLIDER, 86 116 270 16 )
			SLIDER( "cg_thirdPersonRange" 80 40 120, "Range of the third person camera", "Range:", 58, 175 16 8 16 )
			cvarTest	"cg_thirdPerson"
			showCvar	{ "1" }
		}
		itemDef { // 0
			COMMON( cg_thirdPersonSpecialCam, tabWindow4, ITEM_TYPE_YESNO, 86 132 270 16 )
			YESNO( "cg_thirdPersonSpecialCam", "Special Cam:", "Use special third person camera for special events", 29 )
			cvarTest	"cg_thirdPerson"
			showCvar	{ "1" }
		}
		itemDef {
			COMMON( cg_thirdPersonTargetDamp, tabWindow4, ITEM_TYPE_SLIDER, 86 148 270 16 )
			SLIDER( "cg_thirdPersonTargetDamp" 0.5 0. 1.0, "Snappiness of the third person following camera", "Target Damping:", 14, 175 16 8 16 )
			cvarTest	"cg_thirdPerson"
			showCvar	{ "1" }
		}
		itemDef {
			COMMON( cg_thirdPersonVertOffset, tabWindow4, ITEM_TYPE_SLIDER, 86 164 270 16 )
			SLIDER( "cg_thirdPersonVertOffset" 16 -24 48, "Vertical offset (height) of the third person following camera", "Vertical Offset:", 9, 175 16 8 16 )
			cvarTest	"cg_thirdPerson"
			showCvar	{ "1" }
		}

		// advanced
		BACKGROUND_B( tabWindow4, 84 181 273 176 )
		BACKGROUND_TITLE( tabWindow4, 131 183 180 14 )
		TITLE_SMALL( text_w4_misc, tabWindow4, 218 183 135 14, "Advanced" )
		itemDef { // 0
			COMMON( cg_autoRecordDemo, tabWindow4, ITEM_TYPE_YESNO, 86 197 270 16 )
			YESNO( "cg_autoRecordDemo", "Autorecord Demos:", "Automatically record demos of matches", 10 )
		}
		itemDef { // 1
			COMMON( cg_autoSwitch, tabWindow4, ITEM_TYPE_YESNO, 86 213 270 16 )
			YESNO( "cg_autoSwitch", "Auto Switch Weapon:", "Automaticlly switch weapon on pickup", 0 )
		}
		itemDef { // 0
			COMMON( cg_debugEvents, tabWindow4, ITEM_TYPE_YESNO, 86 229 270 16 )
			YESNO( "cg_debugEvents", "Debug Events:", "Debug entity events", 30 )
		}
		itemDef { // 1
			COMMON( cg_deferPlayers, tabWindow4, ITEM_TYPE_YESNO, 86 245 270 16 )
			YESNO( "cg_deferPlayers", "Defer Players:", "Delay loading new player info (models) during combat. Press TAB to request updates.", 25 )
		}
		itemDef { // 1
			COMMON( cg_jplua, tabWindow4, ITEM_TYPE_YESNO, 86 261 270 16 )
			YESNO( "cg_jplua", "JPLua Plugins:", "Enable JA++ Lua scripting", 25 )
		}
		itemDef { // 1
			COMMON( cg_jpluaAutoload, tabWindow4, ITEM_TYPE_EDITFIELD, 86 277 270 16 )
			EDITFIELD( "cg_jpluaAutoload", "List of plugins to automatically load (0 or empty = disabled, 1 = all)", 36, 36, "JPLua Autoload:", 20 )
		}
		itemDef { // 1
			COMMON( cg_logChat, tabWindow4, ITEM_TYPE_YESNO, 86 293 270 16 )
			YESNO( "cg_logChat", "Chat Logging:", "Log chat to disk", 30 )
		}
//cp_pluginDisable	"0"		???
		itemDef { // 0
			COMMON( cg_teamChatsOnly, tabWindow4, ITEM_TYPE_YESNO, 86 309 270 16 )
			YESNO( "cg_teamChatsOnly", "Team Chats Only:", "Only show chat messages from teammates", 15 )
		}
		itemDef { // 0
			COMMON( developer, tabWindow4, ITEM_TYPE_YESNO, 86 325 270 16 )
			YESNO( "developer", "Developer Mode:", "Enable developer/debug logging and features", 20 )
		}

		// feature: trueview
		BACKGROUND_B( tabWindow4, 362 4 273 160 )
		BACKGROUND_TITLE( tabWindow4, 409 6 180 14 )
		TITLE_SMALL( text_w4_trueview, tabWindow4, 495 6 135 14, "Camera: True View" )
		itemDef {
			COMMON( cg_trueEyePosition, tabWindow4, ITEM_TYPE_SLIDER, 364 20 270 16 )
			SLIDER( "cg_trueEyePosition" -2.0 -4.0 4.0, "Eye position for True View", "Eye Pos:", 24, 199 16 8 16 )
		}
		itemDef { // 0
			COMMON( cg_trueFlip, tabWindow4, ITEM_TYPE_YESNO, 364 36 270 16 )
			YESNO( "cg_trueFlip", "Flip:", "Enable eye-tracking for flipping animations", 39 )
		}
		itemDef {
			COMMON( cg_trueFOV, tabWindow4, ITEM_TYPE_SLIDER, 364 52 270 16 )
			SLIDER( "cg_trueFOV" 110 60 130, "Field of view for True View", "FOV:", 44, 199 16 8 16 )
		}
		itemDef { // 0
			COMMON( cg_trueGuns, tabWindow4, ITEM_TYPE_YESNO, 364 68 270 16 )
			YESNO( "cg_trueGuns", "Guns:", "Enable True View for weapons", 39 )
		}
		itemDef { // 1
			COMMON( cg_trueInvertSaber, tabWindow4, ITEM_TYPE_YESNO, 364 84 270 16 )
			YESNO( "cg_trueInvertSaber", "Invert Saber:", "Invert True View setting when using a lightsaber/melee", 0 )
		}
		itemDef { // 1
			COMMON( cg_trueMoveRoll, tabWindow4, ITEM_TYPE_YESNO, 364 100 270 16 )
			YESNO( "cg_trueMoveRoll", "Move Roll:", "Enable Z/Roll axis rotation for True View", 15 )
		}
		itemDef { // 1
			COMMON( cg_trueRoll, tabWindow4, ITEM_TYPE_YESNO, 364 116 270 16 )
			YESNO( "cg_trueRoll", "Roll:", "Enable eye-tracking for rolling animations", 39 )
		}
		itemDef { // 0
			COMMON( cg_trueSaberOnly, tabWindow4, ITEM_TYPE_YESNO, 364 132 270 16 )
			YESNO( "cg_trueSaberOnly", "Saber Only:", "Only use True View for lightsaber", 10 )
		}
		itemDef { // 1
			COMMON( cg_trueSpin, tabWindow4, ITEM_TYPE_YESNO, 364 148 270 16 )
			YESNO( "cg_trueSpin", "Spin:", "Enable eye-tracking for spinning animations", 40 )
		}

		// advanced: networking
		BACKGROUND_B( tabWindow4, 362 165 273 80 )
		BACKGROUND_TITLE( tabWindow4, 409 167 180 14 )
		TITLE_SMALL( text_w4_trueview, tabWindow4, 495 167 135 14, "Advanced: Networking" )
		itemDef { // 63
			COMMON( cl_maxPackets, tabWindow4, ITEM_TYPE_NUMERICFIELD, 364 181 270 16 )
			NUMERIC( "cl_maxPackets", "aka \"cl_maxpackets\"", 5, 5, "Outbound PPS:", 4 )
		}
		itemDef { // 25000
			COMMON( rate, tabWindow4, ITEM_TYPE_NUMERICFIELD, 364 197 270 16 )
			NUMERIC( "rate", "Rate limit overall networked bits per second", 5, 5, "Rate (bps):", 14 )
		}
		itemDef { // 40
			COMMON( snaps, tabWindow4, ITEM_TYPE_NUMERICFIELD, 364 213 270 16 )
			NUMERIC( "snaps", "How many snapshots per second to request from server (limited by server's framerate)", 5, 5, "Snapshots/sec:", 0 )
		}
		itemDef {
			COMMON( cl_timeNudge, tabWindow4, ITEM_TYPE_SLIDER, 364 229 270 16 )
			SLIDER( "cl_timeNudge" 0 -50 50, "Adjust interpolation/extrapolation of snapshot processing and prediction", "Time Nudge:", 15, 194 16 8 16 )
		}

		// video: performance
		BACKGROUND_B( tabWindow4, 362 246 273 80 )
		BACKGROUND_TITLE( tabWindow4, 409 248 180 14 )
		TITLE_SMALL( text_w4_trueview, tabWindow4, 495 248 135 14, "Video: Performance" )
		itemDef { // 0
			COMMON( com_affinity, tabWindow4, ITEM_TYPE_NUMERICFIELD, 364 262 270 16 )
			NUMERIC( "com_affinity", "Lock JA's process to a certain CPU/core", 5, 5, "CPU Affinity:", 33 )
		}
		itemDef { // 125
			COMMON( com_maxFPS, tabWindow4, ITEM_TYPE_NUMERICFIELD, 364 278 270 16 )
			NUMERIC( "com_maxFPS", "Maximum framerate", 5, 5, "Max FPS:", 58 )
		}
		itemDef { // 0
			COMMON( com_maxFPSUnfocused, tabWindow4, ITEM_TYPE_NUMERICFIELD, 364 294 270 16 )
			NUMERIC( "com_maxFPSUnfocused", "Maximum framerate when window is not focused", 5, 5, "Max FPS (unfocused):", 0 )
		}
		itemDef { // 50
			COMMON( com_maxFPSMinimized, tabWindow4, ITEM_TYPE_NUMERICFIELD, 364 310 270 16 )
			NUMERIC( "com_maxFPSMinimized", "Maximum framerate when window is minimized", 5, 5, "Max FPS (minimized):", 0 )
		}

		// video: window
		BACKGROUND_B( tabWindow5, 84 4 273 112 )
		BACKGROUND_TITLE( tabWindow5, 131 6 180 14 )
		TITLE_SMALL( text_w5_window, tabWindow5, 218 6 135 14, "Video: Window" )
		itemDef { // 0
			COMMON( r_fullscreen, tabWindow5, ITEM_TYPE_YESNO, 86 20 270 16 )
			YESNO( "r_fullscreen", "Fullscreen:", "Enable fullscreen", 14 )
		}
		itemDef {
			COMMON( r_mode, tabWindow5, ITEM_TYPE_MULTI, 86 36 270 16 )
			MULTI_STR( "r_mode", { "Native"; "-2"; "Custom"; "-1"; "320x240"; "0"; "400x300"; "1"; "512x384"; "2"; "640x480"; "3"; "800x600 (default)"; "4"; "960x720"; "5"; "1024x768"; "6"; "1152x864"; "7"; "1280x1024"; "8"; "1600x1200"; "9"; "2048x1536"; "10"; "856x480 (wide)"; "11"; "2400x600(surround)"; "12" }, "Window Resolution", "Preset:", 34 )
		}
		itemDef { // 1600
			COMMON( r_customWidth, tabWindow5, ITEM_TYPE_NUMERICFIELD, 86 52 270 16 )
			NUMERIC( "r_customWidth", "Custom resolution width", 5, 5, "Custom Width:", 5 )
		}
		itemDef { // 1024
			COMMON( r_customHeight, tabWindow5, ITEM_TYPE_NUMERICFIELD, 86 68 270 16 )
			NUMERIC( "r_customHeight", "Custom resolution height", 5, 5, "Custom Height:", 0 )
		}
		itemDef { // 0
			COMMON( r_swapInterval, tabWindow5, ITEM_TYPE_YESNO, 86 84 270 16 )
			YESNO( "r_swapInterval", "V/Sync:", "Enable vertical sync (lock framerate to monitor refresh rate and wait for vertical blank)", 34 )
		}
		itemDef { // 1
			COMMON( r_centerWindow, tabWindow5, ITEM_TYPE_YESNO, 86 100 270 16 )
			YESNO( "r_centerWindow", "Center Window:", "Position the window in the center of the monitor", 0 )
		}

		// video: graphics
		BACKGROUND_B( tabWindow5, 84 117 273 160 )
		BACKGROUND_TITLE( tabWindow5, 131 119 180 14 )
		TITLE_SMALL( text_w5_graphics, tabWindow5, 218 119 135 14, "Video: Graphics" )
		itemDef { // 0
			COMMON( r_aspectCorrectFonts, tabWindow5, ITEM_TYPE_YESNO, 86 133 270 16 )
			YESNO( "r_aspectCorrectFonts", "Aspect Correct Fonts:", "Fix non-4:3 (widescreen) resolutions font size/position calculation", 0 )
		}
		itemDef { // 1
			COMMON( r_inGameVideo, tabWindow5, ITEM_TYPE_YESNO, 86 149 270 16 )
			YESNO( "r_inGameVideo", "Ingame Video:", "Enable ROQ videos", 39 )
		}
		itemDef { // 0
			COMMON( r_DynamicGlow, tabWindow5, ITEM_TYPE_YESNO, 86 165 270 16 )
			YESNO( "r_DynamicGlow", "Dynamic Glow:", "Enable dynamic glow", 39 )
		}
		itemDef { // 4
			COMMON( r_DynamicGlowPasses, tabWindow5, ITEM_TYPE_NUMERICFIELD, 86 181 270 16 )
			NUMERIC( "r_DynamicGlowPasses", "How many times to apply dynamic glow", 5, 5, "Glow Passes:", 44 )
			cvarTest	"r_DynamicGlow"
			hideCvar	{ "0" }
		}
		itemDef { // 0
			COMMON( r_DynamicGlowSoft, tabWindow5, ITEM_TYPE_YESNO, 86 197 270 16 )
			YESNO( "r_DynamicGlowSoft", "Glow Soft:", "Use a softer method of blurring", 54 )
			cvarTest	"r_DynamicGlow"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( r_DynamicGlowIntensity, tabWindow5, ITEM_TYPE_SLIDER, 86 213 270 16 )
			SLIDER( "r_DynamicGlowIntensity" 1.13 0.1 3.0, "Intensity of dynamic glow", "Glow Intensity:", 30, 159 16 8 16 )
			cvarTest	"r_DynamicGlow"
			hideCvar	{ "0" }
		}
		itemDef {
			COMMON( r_DynamicGlowDelta, tabWindow5, ITEM_TYPE_SLIDER, 86 229 270 16 )
			SLIDER( "r_DynamicGlowDelta" 0.8 0.1 3.0, "Distance between dynamic glow passes", "Glow Delta:", 50, 159 16 8 16 )
			cvarTest	"r_DynamicGlow"
			hideCvar	{ "0" }
		}
		itemDef { // 512
			COMMON( r_DynamicGlowWidth, tabWindow5, ITEM_TYPE_NUMERICFIELD, 86 245 270 16 )
			NUMERIC( "r_DynamicGlowWidth", "Width of the blur texture for dynamic glow", 5, 5, "Glow Width:", 50 )
			cvarTest	"r_DynamicGlow"
			hideCvar	{ "0" }
		}
		itemDef { // 512
			COMMON( r_DynamicGlowHeight, tabWindow5, ITEM_TYPE_NUMERICFIELD, 86 261 270 16 )
			NUMERIC( "r_DynamicGlowHeight", "Height of the blur texture for dynamic glow", 5, 5, "Glow Height:", 45 )
			cvarTest	"r_DynamicGlow"
			hideCvar	{ "0" }
		}

		// video: advanced
		BACKGROUND_B( tabWindow5, 84 278 273 96 )
		BACKGROUND_TITLE( tabWindow5, 131 280 180 14 )
		TITLE_SMALL( text_w5_vidadvanced, tabWindow5, 218 280 135 14, "Video: Advanced" )
		itemDef { // 0
			COMMON( r_gammaShaders, tabWindow5, ITEM_TYPE_YESNO, 86 294 270 16 )
			YESNO( "r_gammaShaders", "Gamma Shaders:", "Adjust gamma by using ARB shaders or device gamma ramp", 23 )
		}
		itemDef { // 0
			COMMON( r_ext_compress_textures, tabWindow5, ITEM_TYPE_YESNO, 86 310 270 16 )
			YESNO( "r_ext_compress_textures", "Compress Textures:", "Compress textures on GPU", 4 )
		}
		itemDef { // 0
			COMMON( r_ext_compress_lightmaps, tabWindow5, ITEM_TYPE_YESNO, 86 326 270 16 )
			YESNO( "r_ext_compress_lightmaps", "Compress Lightmaps:", "Compress lightmaps on GPU", 0 )
		}
		itemDef { // 0
			COMMON( r_lightmap, tabWindow5, ITEM_TYPE_YESNO, 86 342 270 16 )
			YESNO( "r_lightmap", "Show Lightmap:", "Requires \"sv_cheats 1\"", 24 )
		}
		itemDef {
			COMMON( r_znear, tabWindow5, ITEM_TYPE_SLIDER, 86 358 270 16 )
			SLIDER( "r_znear" 4 1 20, "Distance of the near clipping plane", "Near Clip Plane:", 15, 169 16 8 16 )
		}

		// world
		BACKGROUND_B( tabWindow5, 362 4 273 144 )
		BACKGROUND_TITLE( tabWindow5, 409 6 180 14 )
		TITLE_SMALL( text_w5_world, tabWindow5, 495 6 135 14, "Video: World" )
		itemDef { // 0
			COMMON( r_dynamicLight, tabWindow5, ITEM_TYPE_YESNO, 364 20 270 16 )
			YESNO( "r_dynamicLight", "Dynamic Lighting:", "Enable dynamic lights", 25 )
		}
		itemDef {
			COMMON( r_picmip, tabWindow5, ITEM_TYPE_MULTI, 364 36 270 16 )
			MULTI_STR( "r_picmip", { "Highest"; "0"; "Toaster"; "2"; "Lego"; "4"; "Potato"; "9"; "Brick"; "15" }, "Scale texture resolution to save memory", "Texture Resolution:", 15 )
		}
		itemDef {
			COMMON( r_textureMode, tabWindow5, ITEM_TYPE_MULTI, 364 52 270 16 )
			MULTI_STR( "r_textureMode", { "Nearest"; "GL_NEAREST"; "Linear"; "GL_LINEAR"; "Nearest (mip1)"; "GL_NEAREST_MIPMAP_NEAREST"; "Bilinear"; "GL_LINEAR_MIPMAP_NEAREST"; "Nearest (mip2)"; "GL_NEAREST_MIPMAP_LINEAR"; "Trilinear"; "GL_LINEAR_MIPMAP_LINEAR"; }, "Texture filtering method", "Texture Filtering:", 20 )
		}
		itemDef { // 0
			COMMON( r_ext_texture_filter_anisotropic, tabWindow5, ITEM_TYPE_YESNO, 364 68 270 16 )
			YESNO( "r_ext_texture_filter_anisotropic", "Anisotropic Filtering:", "Enable anisotropic texture filtering", 0 )
		}
		itemDef {
			COMMON( r_ext_texture_filter_anisotropic, tabWindow5, ITEM_TYPE_SLIDER, 364 84 270 16 )
			SLIDER( "r_ext_texture_filter_anisotropic" 8 1.0 16.0, "Anisotropic filtering amount", "Amount:", 73, 155 16 8 16 )
			cvarTest	"r_ext_texture_filter_anisotropic"
			hideCvar	{ "0" }
		}
		itemDef { // 0
			COMMON( r_environmentMapping, tabWindow5, ITEM_TYPE_YESNO, 364 100 270 16 )
			YESNO( "r_environmentMapping", "Environment Mapping:", "Enable envmaps (pseudo reflection/shine)", 10 )
		}
		itemDef { // 1
			COMMON( r_mapOverbrightBits, tabWindow5, ITEM_TYPE_NUMERICFIELD, 364 116 270 16 )
			NUMERIC( "r_mapOverbrightBits", "Brightness of map textures", 5, 5, "Map Overbright Bits:", 10 )
		}
		itemDef { // 0
			COMMON( r_vertexLight, tabWindow5, ITEM_TYPE_YESNO, 364 132 270 16 )
			YESNO( "r_vertexLight", "Vertex Lighting:", "Enable vertex-based lighting (disables lightmaps)", 30 )
		}

		// video: performance
		BACKGROUND_B( tabWindow5, 362 149 273 144 )
		BACKGROUND_TITLE( tabWindow5, 409 151 180 14 )
		TITLE_SMALL( text_w5_performance, tabWindow5, 495 151 135 14, "Video: Performance" )
		itemDef {
			COMMON( r_lodBias, tabWindow5, ITEM_TYPE_MULTI, 364 165 270 16 )
			MULTI_STR( "r_lodBias", { "High"; "0"; "Medium"; "1"; "Low"; "2" }, "Level of detail in models", "Model Quality:", 10 )
		}
		itemDef {
			COMMON( r_subdivisions, tabWindow5, ITEM_TYPE_MULTI, 364 181 270 16 )
			MULTI_STR( "r_subdivisions", { "Highest"; "0"; "Very High"; "1"; "High"; "2"; "Medium"; "4"; "Low"; "10"; "Very Low"; "20"; "Potato"; "80" }, "Quality of smooth surfaces in the world", "World Quality:", 10 )
		}
		itemDef { // 1
			COMMON( r_detailTextures, tabWindow5, ITEM_TYPE_YESNO, 364 197 270 16 )
			YESNO( "r_detailTextures", "Detail Textures:", "Disable 'extra' cosmetic textures and effects", 0 )
		}
		itemDef { // 1
			COMMON( r_flares, tabWindow5, ITEM_TYPE_YESNO, 364 213 270 16 )
			YESNO( "r_flares", "Flares:", "Enable sprite-based flares on light sources", 44 )
		}
		itemDef { // 0
			COMMON( r_fastSky, tabWindow5, ITEM_TYPE_YESNO, 364 229 270 16 )
			YESNO( "r_fastSky", "Disable Skybox:", "Disable skybox", 5 )
		}
		itemDef { // 1
			COMMON( r_surfaceSprites, tabWindow5, ITEM_TYPE_YESNO, 364 245 270 16 )
			YESNO( "r_surfaceSprites", "Surface Sprites:", "Enable surface sprites for world effects (grass etc)", 0 )
		}
		itemDef { // 100
			COMMON( r_markCount, tabWindow5, ITEM_TYPE_NUMERICFIELD, 364 261 270 16 )
			NUMERIC( "r_markCount", "How many decals to draw on world surfaces", 5, 5, "Mark Count:", 24 )
		}
		itemDef { // 2
			COMMON( r_drawFog, tabWindow5, ITEM_TYPE_YESNO, 364 277 270 16 )
			YESNO( "r_drawFog", "Draw Fog:", "Requires \"sv_cheats 1\"", 34 )
		}

		// input: mouse
		BACKGROUND_B( tabWindow5, 362 294 273 128 )
		BACKGROUND_TITLE( tabWindow5, 409 296 180 14 )
		TITLE_SMALL( text_w5_sound, tabWindow5, 495 296 135 14, "Input: Mouse" )
		itemDef {
			COMMON( in_mouse, tabWindow5, ITEM_TYPE_MULTI, 364 310 270 16 )
			MULTI_STR( "in_mouse", { "Disabled"; "0"; "Raw Input"; "1"; "OS Fallback"; "2" }, "Mouse input method", "Mouse Input:", 34 )
		}
		itemDef { // 5
			COMMON( sensitivity, tabWindow5, ITEM_TYPE_NUMERICFIELD, 364 326 270 16 )
			NUMERIC( "sensitivity", "Sensitivity of mouse movement", 5, 5, "Mouse Sensitivity:", 5 )
		}
		itemDef { // 0.022
			COMMON( m_pitch, tabWindow5, ITEM_TYPE_NUMERICFIELD, 364 342 270 16 )
			NUMERIC( "m_pitch", "Vertical mouse sensitivity multiplier", 5, 5, "Mouse Y Multiplier:", 0 )
		}
		itemDef { // 0.022
			COMMON( m_yaw, tabWindow5, ITEM_TYPE_NUMERICFIELD, 364 358 270 16 )
			NUMERIC( "m_yaw", "Horizontal mouse sensitivity multiplier", 5, 5, "Mouse X Multiplier:", 0 )
		}
		itemDef { // 0
			COMMON( m_filter, tabWindow5, ITEM_TYPE_YESNO, 364 374 270 16 )
			YESNO( "m_filter", "Mouse Smoothing:", "Smooth mouse input across multiple frames", 15 )
		}
		itemDef { // 0
			COMMON( cl_mouseAccel, tabWindow5, ITEM_TYPE_YESNO, 364 390 270 16 )
			YESNO( "cl_mouseAccel", "Mouse Acceleration:", "Enable mouse acceleration", 0 )
		}
		itemDef {
			COMMON( cl_mouseAccel, tabWindow5, ITEM_TYPE_SLIDER, 364 406 270 16 )
			SLIDER( "cl_mouseAccel" 0.02 0.0001 0.25, "Mouse acceleration factor", "Acceleration Amount:", 0, 169 16 8 16 )
		}
		/*
		itemDef {
			COMMON( in_mouse, tabWindow5, ITEM_TYPE_MULTI, 364 422 270 16 )
			MULTI_STR( "in_mouse", { "Default"; "0"; "QuakeLive"; "1" }, "Description", "Mouse Input:", 34 )
		}
		*/

		// sound
		BACKGROUND_B( tabWindow6, 84 4 273 144 )
		BACKGROUND_TITLE( tabWindow6, 131 6 180 14 )
		TITLE_SMALL( text_w6_sound, tabWindow6, 218 6 135 14, "Sound" )
		itemDef {
			COMMON( s_khz, tabWindow6, ITEM_TYPE_MULTI, 86 20 270 16 )
			MULTI_STR( "s_khz", { "Low"; "11"; "Medium"; "22"; "High"; "44" }, "Sound quality in KHz", "Quality:", 24 )
		}
		itemDef {
			COMMON( s_mixAhead, tabWindow6, ITEM_TYPE_SLIDER, 86 36 270 16 )
			SLIDER( "s_mixAhead" 0.2 0.0001 0.9999, "Sound buffer size", "Mix Ahead:", 15, 199 16 8 16 )
		}
		itemDef {
			COMMON( s_mixPreStep, tabWindow6, ITEM_TYPE_SLIDER, 86 52 270 16 )
			SLIDER( "s_mixPreStep" 0.05 0.0001 0.5, "Sound buffer cursor", "Mix Pre Step:", 0, 199 16 8 16 )
		}
		itemDef {
			COMMON( s_musicVolume, tabWindow6, ITEM_TYPE_SLIDER, 86 68 270 16 )
			SLIDER( "s_musicVolume" 0.25 0.0 1.0, "Volume of background music", "Music Volume:", 0, 199 16 8 16 )
		}
		itemDef {
			COMMON( s_volume, tabWindow6, ITEM_TYPE_SLIDER, 86 84 84 16 )
			SLIDER( "s_volume" 0.5 0.0 1.0, "Master volume control", "Volume:", 29, 199 16 8 16 )
		}
		itemDef {
			COMMON( s_volumeVoice, tabWindow6, ITEM_TYPE_SLIDER, 86 100 270 16 )
			SLIDER( "s_volumeVoice" 1.0 0.0 1.0, "Volume of character voices", "Voice Volume:", 0, 199 16 8 16 )
		}
		itemDef { // 44100
			COMMON( s_sdlSpeed, tabWindow6, ITEM_TYPE_NUMERICFIELD, 86 116 270 16 )
			NUMERIC( "s_sdlSpeed", "Sound driver sample rate (in Hz)", 5, 5, "Sample Rate:", 5 )
		}
		itemDef {
			COMMON( s_separation, tabWindow6, ITEM_TYPE_SLIDER, 86 132 270 16 )
			SLIDER( "s_separation" 0.5 0.0 1.0, "Stereo sound separation", "Separation:", 10, 199 16 8 16 )
		}

		/*
		// master server
		BACKGROUND_B( tabWindow5, 362 4 273 144 )
		TITLE_SMALL( text_w5_sound, tabWindow5, 495 6 135 14, "Video: World" )
		itemDef { // masterjk3.ravensoft.com
			COMMON( sv_master1, tabWindow4, ITEM_TYPE_EDITFIELD, 86 277 270 16 )
			EDITFIELD( "sv_master1", "Description", 36, 36, "Master Server 1:", 0 )
		}
		itemDef { // master.jkhub.org
			COMMON( sv_master2, tabWindow5, ITEM_TYPE_EDITFIELD, 86 277 270 16 )
			EDITFIELD( "sv_master2", "Description", 36, 36, "Master Server 2:", 0 )
		}
		itemDef { // ""
			COMMON( sv_master3, tabWindow5, ITEM_TYPE_EDITFIELD, 86 277 270 16 )
			EDITFIELD( "sv_master3", "Description", 36, 36, "Master Server 3:", 0 )
		}
		*/

		/* unused type templates
		itemDef {
			COMMON( cg_autoswitch, tabWindow1, ITEM_TYPE_MULTI, 358 8 270 16 )
			MULTI_FL( "cg_autoswitch", { "Never" 0; "Safe weapons only" 1; "Always switch" 2 }, "Automatically switch weapons when you pick them up", "Auto switch:", 0 )
		}
		itemDef {
			COMMON( button_sndRestart, tabWindow1, ITEM_TYPE_BUTTON, 86 8 270 16 )
			BUTTON( "Reload the sound system to apply changes", @MENUS_APPLY_CHANGES, 0 )
			action {
				exec "snd_restart";
				play "sound/interface/button1"
			}
		}
		*/
	}
}
